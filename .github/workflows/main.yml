name: CI

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        hugo: [0.58.2]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: false
        lfs: true
        clean: clean
        path: source
    - uses: actions/setup-go@v1
      with:
        go-version: '1.x'
    - name: Install dependencies
      run: |
        # sudo apt update -y && sudo apt install -y graphviz python3
        sudo snap install hugo && sudo snap refresh hugo
        HUGO_ROOT="${GITHUB_WORKSPACE}/../hugo-${{ matrix.hugo }}"
        mkdir -p "$HUGO_ROOT"
        if [ ! -e "$HUGO_ROOT/hugo" ]; then
          cd "$HUGO_ROOT"
          wget https://github.com/gohugoio/hugo/releases/download/v${{ matrix.hugo }}/hugo_${{ matrix.hugo }}_Linux-64bit.tar.gz
          tar -axvf hugo_${{ matrix.hugo }}_Linux-64bit.tar.gz
        fi
    - name: Build blog website
      run: |
        echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE}"
        cd "${GITHUB_WORKSPACE}"
        export PATH="${GITHUB_WORKSPACE}/../hugo-${{ matrix.hugo }}:$PATH"
        bash "deploy.sh"
    - name: Deploy blog website
      run: |
        mkdir -p $HOME/.ssh
        chmod 700 $HOME/.ssh
        echo "${{ secrets.ACTIONS_DEPLOY_KEY }}" > $HOME/.ssh/id_rsa.action
        chmod 600 $HOME/.ssh/id_rsa.action
        export GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o User=owent -o IdentityFile=$HOME/.ssh/id_rsa.action"
        if [ -e "${GITHUB_WORKSPACE}/../public_repo" ]; then rm -rf "${GITHUB_WORKSPACE}/../public_repo" ; fi
        git clone --depth=1 --single-branch --branch "master" "git@github.com:owent/blog-website.git" "${GITHUB_WORKSPACE}/../public_repo"
        cd "${GITHUB_WORKSPACE}/../public_repo"
        git rm -r '*'
        find "${GITHUB_WORKSPACE}/public" -maxdepth 1 | tail -n +2 | xargs -I % cp -rf % "$PWD"
        echo "owent.net" > CNAME
        git config user.name "owent"
        git config user.email "admin@owent.net"
        git remote rm origin || true
        git remote add origin "git@github.com:owent/blog-website.git"
        git add --all
        git commit --allow-empty -a -m "Automated deployment: $(date -u) ${GITHUB_SHA}"
        git push -f origin HEAD:master
        echo "${GITHUB_SHA} was successfully deployed"

